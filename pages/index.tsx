import Head from "next/head";
import {
  Box,
  Container,
  Input,
  FormControl,
  FormLabel,
  FormErrorMessage,
  FormHelperText,
  Select,
  Heading,
  VStack,
  Textarea,
} from "@chakra-ui/react";
import { useForm, SubmitHandler } from "react-hook-form";
import axios from "axios";

type Inputs = {
  title: string;
  country: string;
  textarea: string;
};

export default function Home() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>();

  const onSubmit: SubmitHandler<Inputs> = async (data) => {
    // console.log(data);
    const res = await axios.get("./api/upload").catch((e) => e);
    console.log(res.data);
  };

  console.log(watch("textarea"));

  return (
    <>
      <Head>
        <title>React Hook Form Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container bg="gray.50" borderRadius="10px" p={4}>
        <Box p={5}>
          <Heading>React Hook Form Example with Next.js / Chakra UI</Heading>
        </Box>

        <form onSubmit={handleSubmit(onSubmit)}>
          <VStack spacing={5}>
            <FormControl id="title" isInvalid={!!errors.title}>
              <FormLabel key="title" htmlFor="title">
                Title
              </FormLabel>
              <Input
                placeholder="title"
                {...register("title", {
                  // required: "This is required",
                  // minLength: {
                  //   value: 4,
                  //   message: "Minimum length should be 4",
                  // },
                })}
              />
              <FormHelperText>Set title</FormHelperText>
              <FormErrorMessage>
                {errors.title && errors.title.message}
              </FormErrorMessage>
            </FormControl>
            <FormControl id="country" isInvalid={!!errors.country}>
              <FormLabel>Country</FormLabel>
              <Select
                placeholder="Select country"
                {...register("country", {
                  // required: "This is required",
                })}
              >
                <option>United Arab Emirates</option>
                <option>Nigeria</option>
              </Select>
              <FormHelperText>Select your country</FormHelperText>
              <FormErrorMessage>
                {errors.country && errors.country.message}
              </FormErrorMessage>
            </FormControl>
            <FormControl id="textarea" isInvalid={!!errors.textarea}>
              <FormLabel>Message</FormLabel>
              <Textarea
                placeholder="Here is text area"
                {...register("textarea")}
              />
              <FormHelperText>Write your message!!</FormHelperText>
            </FormControl>
            <Input type="submit" bg="teal" color="white" />
          </VStack>
        </form>
      </Container>
    </>
  );
}
